#!/usr/bin/env bash
set -u
readonly ENABLE_DEBUG=${ENABLE_DEBUG:-1}

msg_debug() {
  if [[ $ENABLE_DEBUG -eq 1 ]];then
    printf "%s\\n" "[DEBUG]$(date "+[%F_%T]"):${FUNCNAME[1]}:$1" >&2
  fi
}

msg_error() {
  msg "Error" "$1"
}

msg_warn() {
  msg "Warning" "$1"
}

msg() {
  local _level="$1" ;shift
  local _msg="$1"
  printf "%s\\n" "[$_level]$(date "+[%F_%T]"):$_msg" >&2
}

get_image_date_filename () {
  msg_debug "start"
  local _target="$1"
  # If the file name starts with YYYY-MM-DD...
  local _pat='^([0-9]{4}-[0-9]{2}-[0-9]{2})'
  local _date
  if [[ "$(basename "$_target")" =~  $_pat ]]; then
    _date="${BASH_REMATCH[1]}"
  else
    msg_debug "'$_target' does not contain the name."
    return 1
  fi
  printf "%s\\n" "$_date"
}

get_image_date_exif () {
  msg_debug "start"
  local _target="$1"
  local _date
  _date="$(identify -verbose "$_target" | awk '/exif:DateTime:/{gsub(":","-",$2); printf $2}')"
  if [[ -z "${_date}" ]];then
    msg_warn "$_target: 'exitf:DateTime' is empty."
    return 1
  fi
  printf "%s\\n" "$_date"
}

get_image_date_modified () {
  msg_debug "start"
  local _target="$1"
  if ! stat -c '%y' "$_target" | awk '{print $1}' ;then
    msg_warn "$_target: stat command was not succeeded."
    return 1
  fi
}

get_image_date () {
  msg_debug "start"
  local _target="$1"
  local _date
  _date=$(get_image_date_filename "$_target") && {
    printf "%s\\n" "$_date"
    return 0
  }
  _date=$(get_image_date_exif "$_target") && {
    printf "%s\\n" "$_date"
    return 0
  }
  _date=$(get_image_date_modified "$_target") && {
    printf "%s\\n" "$_date"
    return 0
  }
  return 1
}

main () {
  local _target="$1"
  local _date
  if ! [[ -e $_target ]] ;then
    msg_error "$_target: file does not exist."
    return 1
  fi
  if _date="$(get_image_date "$_target")" ;then
    printf "%s\\n" "$_date"
    return 0
  else
    msg_error "$_target: date cannot be set."
    return 1
  fi
}

main ${1+"$@"}
exit $?
